# Основной блок конфигурации логирования

[loggers]
keys=root,main,db,gmqtt

[handlers]
keys=consoleHandler, fileHandler, rotatingFileHandler, mqttRotatingFileHandler

[formatters]
keys=simpleFormatter, detailedFormatter

# Логгер root — базовый логгер для всех сообщений
[logger_root]
level=DEBUG
handlers=consoleHandler

# Логгер для основного приложения (main)
[logger_main]
level=INFO
handlers=consoleHandler, fileHandler
qualname=main
propagate=0

# Логгер для работы с базой данных (db)
[logger_db]
level=ERROR
handlers=rotatingFileHandler
qualname=db
propagate=0

# Логгер для работы с fast_mqtt (вывод в консоль и запись в файл)
[logger_gmqtt]
level=INFO
handlers=consoleHandler, mqttRotatingFileHandler
qualname=gmqtt
propagate=0

# Консольный хендлер: выводит логи в терминал
[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

# Файловый хендлер: записывает логи в файл
[handler_fileHandler]
class=FileHandler
level=INFO
formatter=detailedFormatter
args=('./logs/app.log', 'a')  # 'a' означает, что логи будут добавляться в конец файла

# Хендлер ротации файла: создаёт новый файл, если достигается максимальный размер
[handler_rotatingFileHandler]
class=logging.handlers.RotatingFileHandler
level=ERROR
formatter=detailedFormatter
args=('./logs/error.log', 'a', 10485760, 5)  # 10 MB на файл, максимум 5 файлов

# Хендлер ротации для MQTT: записывает MQTT-логи в отдельный файл
[handler_mqttRotatingFileHandler]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=detailedFormatter
args=('./logs/mqtt.log', 'a', 10485760, 3)  # 10 MB на файл, максимум 3 файла

# Форматтер для упрощённых сообщений (например, для консоли)
[formatter_simpleFormatter]
format=%(levelname)s: %(message)s

# Форматтер для детализированных сообщений (например, для файлов)
[formatter_detailedFormatter]
format=%(levelname)s (%(asctime)s): %(message)s (File: %(filename)s, Line: %(lineno)d, Func: %(funcName)s)
datefmt=%Y-%m-%d %H:%M:%S
